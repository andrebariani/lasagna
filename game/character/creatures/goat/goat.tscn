[gd_scene load_steps=9 format=2]

[ext_resource path="res://character/creatures/creature.tscn" type="PackedScene" id=1]
[ext_resource path="res://character/creatures/goat/goat-safe.png" type="Texture" id=2]
[ext_resource path="res://character/creatures/basic_AI/basic_AI.gd" type="Script" id=3]

[sub_resource type="Animation" id=4]

resource_name = "idle-left"
length = 1.0
loop = false
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath(".:flip_h")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 1 ]
}

[sub_resource type="Animation" id=5]

resource_name = "idle-right"
length = 1.0
loop = false
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath(".:flip_h")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 1 ]
}

[sub_resource type="Animation" id=2]

resource_name = "walk-left"
length = 0.4
loop = true
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath(".:flip_h")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 1 ]
}

[sub_resource type="Animation" id=3]

resource_name = "walk-right"
length = 0.4
loop = true
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath(".:flip_h")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 1 ]
}

[sub_resource type="RectangleShape2D" id=6]

custom_solver_bias = 0.0
extents = Vector2( 16.4733, 8 )

[node name="Goat" index="0" instance=ExtResource( 1 )]

friction = 25.0
push_force = 150.0
max_speed = 300.0
max_health = 100

[node name="OrientedSprite" parent="." index="0"]

texture = ExtResource( 2 )
offset = Vector2( 0, -16 )
flip_h = true
frame = 1
_sections_unfolded = [ "Animation", "Offset", "Transform", "Visibility" ]

[node name="AnimationPlayer" type="AnimationPlayer" parent="OrientedSprite" index="0"]

root_node = NodePath("..")
autoplay = ""
playback_process_mode = 1
playback_default_blend_time = 0.0
playback_speed = 1.0
anims/idle-left = SubResource( 4 )
anims/idle-right = SubResource( 5 )
anims/walk-left = SubResource( 2 )
anims/walk-right = SubResource( 3 )
blend_times = [  ]

[node name="CollisionBox" parent="." index="1"]

position = Vector2( 0, 8 )
shape = SubResource( 6 )
_sections_unfolded = [ "Transform" ]

[node name="AI" parent="." index="3"]

script = ExtResource( 3 )

[node name="Timer" type="Timer" parent="AI" index="0"]

process_mode = 1
wait_time = 1.0
one_shot = false
autostart = false

[connection signal="timeout" from="AI/Timer" to="AI" method="_on_Timer_timeout"]


